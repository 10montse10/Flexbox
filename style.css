body {
    background-color: aquamarine;
    font-family: sans-serif;
}

* {
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}

.container {
    background-color: blueviolet;
    display: flex; /* Esto habilita ls propiedades de flexbox */
    flex-direction: row; /* Este es el valor por default*/
    flex-direction: column; /* Cambia de dirección al eje principal */
    
}

/* Propiedades de flexbox para los items.
    
    * flex-basis -> Tamaño del main-ize del elemento. Es como un 'width/height' ancho base de el elemento. 

        Cuando flex-direction: row / row-reserve -> flex-basis = ancho
        Cuando flex-direction: column / column-reserve -> flex-basis alto

        Flex-basis es relativo al espacio disponible de el contenerdor. Si no hay espacio suficiente, los elementos no crecerán más allá.

        Si tengo Flex-bsis declarado el width/height no funciona, de acuerdo al contexto de dirección de el eje principal.
*/

.items{
    flex-basis: 100px;
    background-color: blue;
    /* width: 6.25rem;
    height: 6.25rem;  */ 
    text-align: center;
    font-size: 24px;
    font-weight: bold;
    border: 1px solid black;
}

/* Vamos a usar algo que se llama pseudoclases para seleccionar los items individualmente */

/* .items:nth-child(1){
    background-color: bisque;
    font-size: 1.5rem;
    padding-top: 1.875rem;
    height: 6.25rem;
}

.items:nth-child(2){
    background-color: burlywood;
    font-size: 1.125rem;
    padding-top: 1.25rem;
    height: 15.625rem;
}

.items:nth-child(3){
    background-color: plum;
    font-size: 1.875rem;
    padding-top: .9375rem;
    height: 21.875rem;
}

.items:nth-child(4){
    background-color: purple;
    font-size: .75rem;
    padding-top: .9375rem;
    height: 25rem;
} */